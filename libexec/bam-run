#!/usr/bin/env bash

set -e

source bam-sh-setup

cmd=$(basename "$0")
args=$(getopt -o j:l:hkSnv -l "jobs:,load-average:,run-under:,keep-going,no-keep-going,stop,help,dry-run,verbose" -n "$cmd" -- "$@")
if [ $? != 0 ]; then
  exit 1
fi

runner=
num_jobs=
load_avg=
keep_going=0
dry_run=0
verbose=0
EVAL_="eval"

eval set -- "$args"
while true; do
  case "$1" in
    -h|--help)
      exec man "$cmd"
      shift
      ;;
    -j|--jobs)
      num_jobs="$2"
      shift 2
      ;;
    -l|--load-average)
      load_avg="$2"
      shift 2
      ;;
    -k|--keep-going)
      keep_going=1
      shift
      ;;
    -S|--no-keep-going|--stop)
      keep_going=0
      shift
      ;;
    --run-under)
      runner="$2"
      shift 2
      ;;
    -n|--dry-run)
      dry_run=1
      EVAL_="echo"
      shift
      ;;
    -v|--verbose)
      verbose=1
      shift
      ;;
    --)
      shift
      break
      ;;
  esac
done

if [ "$#" -eq 0 ]; then
  echo "$cmd: error: missing executable target" >&2
  exit 1
fi

if ! [ -e "$BAM_OUTPUT_PATH/build.ninja" ]; then
  echo "$cmd: error: output directory '$BAM_OUTPUT_PATH' does not contain a previously generated build" >&2
  exit 1
fi
check_buildenv "$BAM_OUTPUT_PATH"

target_label="$1"
shift
if is_target_label "$target_label"; then
  target_exe="$(gn --root="$BAM_SOURCE_ROOT" ls "$BAM_OUTPUT_PATH" --as=output --type=executable "$target_label")"

  if [ "$?" -ne 0 ]; then
    echo "$cmd: error: $target_exe" >&2
    exit 1
  elif [ -z "$target_exe" ]; then
    echo "$cmd: error: executable target '$target_label' not found" >&2
    exit 1
  elif [ "$(echo "$target_exe" | wc -l)" -ne 1 ]; then
    echo "$cmd: error: found multiple executable targets for '$target_label'" >&2
    echo "$target_exe" | sort | sed "s|^|    |" >&2
    exit 1
  elif [ "$verbose" -ne 0 ]; then
    echo "$cmd: found target for '$target_label':"
    echo "    $target_exe"
  fi
elif [[ "$target_label" == *"/"* ]]; then
  target_exe="$(realpath -L -m --relative-to="$BAM_OUTPUT_PATH" "$target_label")"
else
  target_exe="$target_label"
fi

NINJA_FLAGS=
if [ -n "$num_jobs" ]; then
  NINJA_FLAGS+=" -j $num_jobs"
fi
if [ -n "$load_avg" ]; then
  NINJA_FLAGS+=" -l $load_avg"
fi
if [ "$keep_going" -ne 0 ]; then
  NINJA_FLAGS+=" -k 0"
fi
if [ "$dry_run" -ne 0 ]; then
  NINJA_FLAGS+=" -n"
fi
if [ "$verbose" -ne 0 ]; then
  NINJA_FLAGS+=" -v"
fi

if [ "$verbose" -ne 0 ]; then
  echo "$cmd: building executable target '$target_exe'"
fi
ninja -C "$BAM_OUTPUT_PATH" $NINJA_FLAGS "$target_exe" || exit 1

if [ "$verbose" -ne 0 ]; then
  echo
  echo $cmd: running command line: "$runner" "./$target_exe" "$@"
fi
args=("$@")
if [ "$EVAL_" == "echo" ]; then
  args=("${args[@]/%/\"}")
  args=("${args[@]/#/\"}")
fi
cd "$BAM_OUTPUT_PATH" && $EVAL_ "$runner" "./$target_exe" "${args[@]}"
